[2019-12-05 19:14:34,997] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-37 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,011] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-3 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,012] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-28 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,012] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-15 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,012] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-30 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,013] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,013] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-43 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,014] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-13 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,014] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-45 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,015] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,015] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-33 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,018] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,019] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-7 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,019] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-12 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,020] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-18 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,030] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-46 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,031] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-9 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,032] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-10 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,032] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-49 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,032] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-21 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,033] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,033] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-39 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,034] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,034] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-16 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,035] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-6 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,035] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-48 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,036] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,036] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,036] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-19 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,037] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,037] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-4 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,038] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-25 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,038] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-40 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,038] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,039] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,039] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,039] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,040] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,040] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-24 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,040] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,041] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,041] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-36 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,066] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,066] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-34 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,067] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,067] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-42 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,068] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-31 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,068] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-22 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,068] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-27 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,069] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition demo-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,082] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,083] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,084] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) to broker 1 for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) to broker 1 for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) to broker 1 for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) to broker 1 for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) to broker 1 for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,085] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) to broker 1 for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,088] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 0 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 19:14:35,095] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,096] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,097] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,104] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,117] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,118] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,3,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,119] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=1,2,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,120] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,3,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,120] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=2,1,3, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,120] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=3, zkVersion=4, replicas=3,1,2, isNew=false) correlation id 1 from controller 1 epoch 5 for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,198] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,199] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,200] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,205] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-8 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,225] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,226] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,226] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,226] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,227] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,227] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,227] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,228] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,228] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,228] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,228] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,229] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,229] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,230] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,230] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,230] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,230] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,231] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,231] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,231] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,232] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,232] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,232] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,233] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,233] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,233] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,234] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,234] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,234] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,235] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,235] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,235] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,236] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,236] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,236] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,237] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,237] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,238] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,238] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,238] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,239] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,239] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,239] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,240] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,240] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,240] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,241] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,241] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,241] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,242] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition demo-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,247] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-27 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,257] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-46 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,269] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-5 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,289] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-24 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,299] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-43 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,315] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-2 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,377] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-21 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,423] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-40 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,478] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-37 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,539] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-18 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,561] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-34 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,563] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,563] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,563] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,564] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,564] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-15 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,564] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,564] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,565] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,566] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,566] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,567] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,567] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,567] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,568] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,568] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,568] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,569] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,569] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,570] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,570] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,570] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,571] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,571] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,571] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,571] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,571] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-31 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,572] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,572] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,572] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,572] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,573] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,573] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,573] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,573] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,574] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,574] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,574] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,574] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,575] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,575] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,575] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,575] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,575] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,576] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,576] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,576] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,576] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,576] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,577] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,577] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,577] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,577] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition demo-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-05 19:14:35,578] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-12 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,578] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,579] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) to broker 1 for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) to broker 1 for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) to broker 1 for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) to broker 1 for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) to broker 1 for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,580] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) to broker 1 for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,581] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,582] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,583] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,584] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,585] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-28 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,590] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-9 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,599] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-47 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,603] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-6 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,608] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-44 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,613] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-25 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,618] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-3 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,625] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-22 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,638] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-41 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,644] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-0 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,649] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-38 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,653] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-10 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,658] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-29 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,670] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-19 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,674] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-48 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,678] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-45 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,687] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-7 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,692] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-16 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,700] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-35 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,705] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-26 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,717] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-23 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,724] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,732] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-32 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,753] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-42 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,754] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,755] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,755] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,756] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,757] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,758] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,759] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,759] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,760] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,761] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-48 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,761] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-33 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,762] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,763] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-4 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,763] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,768] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,769] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,769] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,770] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,771] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,772] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,767] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-42 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,773] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-9 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,773] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,774] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-12 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,775] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-21 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,775] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,776] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,777] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,777] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-24 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,780] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-13 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,781] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,781] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,784] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,785] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-30 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,785] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,786] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,786] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,787] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-36 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,787] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-6 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,787] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,788] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,788] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,789] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,789] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,789] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,790] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,790] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-18 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,791] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,791] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-45 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,791] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,792] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1141)
	at kafka.controller.KafkaController.process(KafkaController.scala:1604)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:35,784] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-20 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,797] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,803] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-39 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,815] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-36 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,849] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-17 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,857] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-33 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,860] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-14 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,863] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-30 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,866] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-49 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,870] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition demo-11 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,882] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,883] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,883] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,883] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,883] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,894] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request LEADER_AND_ISR with correlation id 1 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,911] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-05 19:14:35,912] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 2 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 19:14:35,916] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-21 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-25 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-29 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-0 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-33 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-4 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-5 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-38 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-9 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-42 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-13 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-46 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-17 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-24 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-28 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-32 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-3 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-36 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-37 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-8 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-41 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-12 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-45 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-16 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-49 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-20 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-23 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-27 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-31 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-2 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-35 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-7 (state.change.logger)
[2019-12-05 19:14:35,917] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-40 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-11 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-44 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-15 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-48 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-19 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-22 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-26 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-30 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-1 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-34 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-6 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-39 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,3,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-10 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=1,2,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-43 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,3,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-14 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=2,1,3, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-47 (state.change.logger)
[2019-12-05 19:14:35,918] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=3, zkVersion=5, replicas=3,1,2, isNew=false) correlation id 3 from controller 1 epoch 5 for partition demo-18 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 5 starting the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-8 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-27 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-46 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-5 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-24 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,920] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-43 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-2 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-21 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-40 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-37 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-18 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-34 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-15 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-31 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-12 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-28 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-9 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-47 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-6 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-44 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,921] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-25 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-3 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-22 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-41 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-38 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-10 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-29 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-19 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-48 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-45 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-7 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,922] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-16 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-35 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-26 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-23 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-32 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-4 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-42 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-13 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-20 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-1 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-39 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-36 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-17 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-33 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,923] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-14 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,924] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-30 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,924] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-49 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,924] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition demo-11 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,925] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 5 for the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 19:14:35,929] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request LEADER_AND_ISR with correlation id 3 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 19:14:35,932] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,932] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,932] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,932] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,932] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,933] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,934] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=5, isr=[3], zkVersion=5, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-05 19:14:35,935] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 4 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 19:14:40,882] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,882] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,882] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,883] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,884] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,884] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,884] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,884] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,884] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,885] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,885] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,885] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,901] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,901] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,901] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,902] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,902] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,902] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,902] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,902] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,903] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,903] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,903] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,903] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,903] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,904] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,904] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,904] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,904] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,924] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,925] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,925] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,926] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,926] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,926] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,927] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,927] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,927] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,927] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,927] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,928] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,943] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,944] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,960] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,963] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,963] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,964] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,964] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,964] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,964] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,965] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,965] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,965] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,965] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,965] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,982] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,982] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,983] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,983] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,983] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,983] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,984] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,984] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,984] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,984] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,984] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,985] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,985] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,985] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,985] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,986] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,986] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,997] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,997] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,997] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,998] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,998] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,998] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:40,999] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,000] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,000] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,000] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,000] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,039] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,039] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,039] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,039] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,039] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,040] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,041] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,041] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,041] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,041] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,041] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,042] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,056] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,057] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,057] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,061] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,061] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,061] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,062] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,063] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,063] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,063] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,063] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,110] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,110] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,111] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,112] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,112] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,112] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,112] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,113] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,113] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,113] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,113] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,114] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
