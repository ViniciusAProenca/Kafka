[2019-12-05 22:04:03,669] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,670] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,671] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,672] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,672] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,676] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,676] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,676] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,676] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,677] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,678] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,678] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:04:03,678] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,689] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,690] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,690] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,690] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,691] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,691] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,691] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,691] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,692] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,692] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,692] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,693] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,693] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,693] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,694] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,694] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,716] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,716] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,716] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,716] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,738] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,739] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,740] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,740] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,740] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,740] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:09:03,740] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,752] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,753] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,753] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,753] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,754] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,754] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,754] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,754] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,754] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,755] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,756] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,768] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,768] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,783] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,783] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,784] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:14:03,785] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,801] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,801] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,801] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,802] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,803] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,804] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,808] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,808] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,808] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,809] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,810] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,810] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,810] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:19:03,810] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,820] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,820] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,820] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,821] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,821] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,821] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,821] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,822] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,822] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,822] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,822] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,822] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,823] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,823] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,823] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,823] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,829] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,829] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,829] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,829] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:24:03,830] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,873] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,885] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,885] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,885] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,885] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,885] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,886] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,890] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,890] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,890] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,890] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:29:03,891] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,996] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,997] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:03,998] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,004] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,004] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,004] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,004] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,005] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,006] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:34:04,006] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,080] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,081] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,082] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,082] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,082] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,085] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,085] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,085] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,085] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:39:04,086] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,131] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,131] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,131] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,132] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,132] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,132] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,132] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,133] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,133] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,133] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,133] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,134] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,134] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,134] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,134] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,134] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,141] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,141] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,141] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,142] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,142] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,142] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,142] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,142] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:44:04,143] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,154] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,154] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,155] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,155] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,155] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,155] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,156] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,156] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,156] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,156] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,156] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,157] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,157] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,157] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,157] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,157] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,162] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,162] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,162] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,162] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,163] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,163] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,163] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,163] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:49:04,164] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,172] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,173] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,174] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,174] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,174] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,174] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,180] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,180] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,180] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,180] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:54:04,181] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:23,193] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,193] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,193] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,193] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,194] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,195] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,196] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,197] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,198] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,199] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-34 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-45 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-15 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-4 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-26 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-37 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-31 (state.change.logger)
[2019-12-05 22:57:23,200] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-20 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-42 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-23 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-12 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-1 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-6 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-28 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-39 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-17 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-9 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-3 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-14 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-25 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-47 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-36 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-41 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-22 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-33 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-11 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-0 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-44 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-49 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-38 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-27 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-8 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-19 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-30 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-46 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-35 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-13 (state.change.logger)
[2019-12-05 22:57:23,201] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-24 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-16 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-5 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-21 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-43 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-10 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-32 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-2 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-48 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-29 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-40 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-7 (state.change.logger)
[2019-12-05 22:57:23,202] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-18 (state.change.logger)
[2019-12-05 22:57:23,206] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-21 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:23,207] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-25 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-29 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-0 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-33 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-4 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-5 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-38 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-9 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-42 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-13 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-46 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-17 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-24 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-28 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-32 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-3 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-36 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-37 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-8 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-41 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-12 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-45 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-16 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-49 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-20 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-23 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-27 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:23,208] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-31 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-2 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-35 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-7 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-40 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-11 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-44 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-15 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-48 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-19 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-22 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-26 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-30 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-1 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-34 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-6 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-39 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-10 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-43 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-14 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-47 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 7 from controller 1 epoch 7 for partition demo-18 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:23,209] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1, 2) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,210] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 7 starting the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-27 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-46 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-5 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-24 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-43 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-21 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-40 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-37 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-18 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-34 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,211] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-15 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-31 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-12 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-28 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-9 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-47 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-6 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-25 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-3 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-22 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-41 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-10 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-29 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-19 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-48 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-45 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-7 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-16 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,212] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-35 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-23 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-4 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-42 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-13 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-39 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-36 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-17 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-33 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-30 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-49 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 7 from controller 1 epoch 7 for partition demo-11 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,213] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,214] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 7 for the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 22:57:23,219] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request LEADER_AND_ISR with correlation id 7 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-21 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-25 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-29 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-0 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-33 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-4 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-5 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-38 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-9 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-42 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-13 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-46 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-17 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-24 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-28 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-32 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-3 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-36 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-37 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-8 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-41 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-12 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-45 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request STOP_REPLICA with correlation id 3 sent to broker vinicius:9092 (id: 2 rack: null) (state.change.logger)
[2019-12-05 22:57:23,222] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-16 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-49 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-20 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-23 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-27 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-31 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-2 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-35 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-7 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-40 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-11 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-44 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-15 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-48 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-19 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-22 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-26 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-30 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-1 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-34 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-6 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-39 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-10 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-43 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-14 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-47 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-18 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2019-12-05 22:57:23,226] TRACE [Controller id=1 epoch=7] Received response {error_code=0} for request UPDATE_METADATA with correlation id 8 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:23,237] TRACE [Controller id=1 epoch=7] Received response {error_code=0} for request UPDATE_METADATA with correlation id 4 sent to broker vinicius:9092 (id: 2 rack: null) (state.change.logger)
[2019-12-05 22:57:23,252] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request STOP_REPLICA with correlation id 5 sent to broker vinicius:9092 (id: 2 rack: null) (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-34 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-45 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-15 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-4 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-26 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-37 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-31 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-20 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-42 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-23 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-12 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-6 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-17 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-39 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-28 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-9 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-3 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-25 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-14 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-36 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-47 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-41 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-33 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-22 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-11 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-44 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-49 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-38 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-27 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-8 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-19 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-30 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,168] TRACE [Controller id=1 epoch=7] Changed partition demo-46 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-35 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-13 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-24 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-16 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-5 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-21 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-43 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-10 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-32 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-2 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-48 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-29 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-40 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-18 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,169] TRACE [Controller id=1 epoch=7] Changed partition demo-7 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-12-05 22:57:26,194] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,194] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-42 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,194] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-5 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-44 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-14 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-26 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,195] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-8 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-48 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-33 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,196] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-38 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-9 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-12 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-21 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,197] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-17 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-24 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-30 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-20 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-29 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-36 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-6 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-41 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-32 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-18 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,198] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-45 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,199] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-2 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,199] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition demo-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 22:57:26,205] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-23 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,205] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-42 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-28 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-39 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-5 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-44 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-14 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-26 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-27 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-8 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-43 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-48 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-33 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-31 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-3 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,206] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-13 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-4 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-47 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-16 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-38 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-9 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-22 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-12 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-21 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-46 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-1 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-17 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-24 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-10 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,207] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-37 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-7 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-30 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-34 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-20 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-29 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-36 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-6 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-11 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-41 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-19 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-35 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-32 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-40 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-25 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-18 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-49 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,208] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-45 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-2 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Changed state of replica 2 for partition demo-15 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) to broker 1 for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) to broker 1 for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) to broker 1 for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) to broker 1 for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) to broker 1 for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,209] TRACE [Controller id=1 epoch=7] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) to broker 1 for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,210] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,211] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,211] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,211] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,211] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,212] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,2,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,3,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=1,2,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,3,1, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=2,1,3, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=3, zkVersion=7, replicas=3,1,2, isNew=false) correlation id 9 from controller 1 epoch 7 for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,213] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 7 starting the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-27 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-46 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-5 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-24 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-43 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-21 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-40 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-37 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-18 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-34 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-15 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-31 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-12 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-28 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-9 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-47 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-6 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-25 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-3 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-22 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-41 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,214] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-10 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-29 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-19 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-48 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-45 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-7 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-16 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-35 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-23 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-4 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-42 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-13 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-39 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-36 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-17 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-33 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-30 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-49 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 9 from controller 1 epoch 7 for partition demo-11 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-8 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-27 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-46 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-5 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-24 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-43 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-2 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-21 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-40 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-37 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-18 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-34 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-15 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-31 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-12 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-28 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-9 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,215] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-47 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-6 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-44 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-25 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-3 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-22 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-41 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-0 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-38 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-10 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-29 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-19 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-48 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-45 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-7 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-16 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-35 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-26 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-23 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-32 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-4 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-42 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-13 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-20 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-1 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-39 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-36 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-17 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-33 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-14 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-30 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-49 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,216] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 7 for the become-follower transition for partition demo-11 with leader -1 (state.change.logger)
[2019-12-05 22:57:26,217] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request LEADER_AND_ISR with correlation id 9 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-21 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-25 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-29 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-0 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-33 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-4 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-5 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-38 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-9 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-42 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-13 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-46 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-17 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-24 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-28 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-32 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-3 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-36 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-37 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-8 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-41 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-12 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-45 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-16 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-49 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-20 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-23 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-27 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-31 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-2 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-35 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-7 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-40 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-11 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-44 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-15 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-48 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-19 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-22 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-26 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-30 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-1 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-34 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-6 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition demo-39 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[3, 2]) for partition demo-10 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[2, 3]) for partition demo-43 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3]) for partition demo-14 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 3]) for partition demo-47 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition demo-18 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2019-12-05 22:57:26,220] TRACE [Controller id=1 epoch=7] Received response {error_code=0} for request UPDATE_METADATA with correlation id 10 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:26,766] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,770] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,771] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,774] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request STOP_REPLICA with correlation id 11 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:26,795] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,795] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,795] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,796] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,797] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,798] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,798] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,798] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,798] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,798] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,799] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,799] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,799] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,802] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,802] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,802] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,802] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,802] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,803] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Changed state of replica 1 for partition demo-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,804] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,805] TRACE [Controller id=1 epoch=7] Sending UpdateMetadata request PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-21 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-25 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-29 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-0 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-33 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-4 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-5 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-38 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-9 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-42 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-13 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-46 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-17 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-24 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-28 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-32 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-3 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-36 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-37 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-8 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-41 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,809] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-12 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-45 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-16 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-49 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-20 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-23 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-27 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-31 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-2 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-35 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-7 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-40 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-11 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-44 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-15 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-48 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-19 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-22 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-26 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-30 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-1 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-34 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-6 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition demo-39 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition demo-10 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition demo-43 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition demo-14 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition demo-47 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=7, leader=-1, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition demo-18 in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 12 (state.change.logger)
[2019-12-05 22:57:26,810] TRACE [Controller id=1 epoch=7] Received response {error_code=0} for request UPDATE_METADATA with correlation id 12 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-23 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-42 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-28 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-39 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-5 (state.change.logger)
[2019-12-05 22:57:26,815] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-44 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-14 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-26 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-27 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-8 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-43 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-48 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,816] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-33 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-31 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-3 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-13 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-4 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-47 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-16 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-38 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-0 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-9 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-22 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-12 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,817] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-21 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-46 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-1 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-17 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-24 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-10 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-37 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-7 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-30 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-34 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-20 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-29 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-36 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-6 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-11 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-41 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-19 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-35 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-32 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-40 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-25 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-18 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-49 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-45 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-2 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Handling stop replica (delete=false) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,818] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition demo-15 (state.change.logger)
[2019-12-05 22:57:26,820] TRACE [Controller id=1 epoch=7] Received response {error_code=0,partitions=[{topic=demo,partition=21,error_code=0},{topic=demo,partition=25,error_code=0},{topic=demo,partition=29,error_code=0},{topic=demo,partition=0,error_code=0},{topic=demo,partition=33,error_code=0},{topic=demo,partition=4,error_code=0},{topic=demo,partition=5,error_code=0},{topic=demo,partition=38,error_code=0},{topic=demo,partition=9,error_code=0},{topic=demo,partition=42,error_code=0},{topic=demo,partition=13,error_code=0},{topic=demo,partition=46,error_code=0},{topic=demo,partition=17,error_code=0},{topic=demo,partition=24,error_code=0},{topic=demo,partition=28,error_code=0},{topic=demo,partition=32,error_code=0},{topic=demo,partition=3,error_code=0},{topic=demo,partition=36,error_code=0},{topic=demo,partition=37,error_code=0},{topic=demo,partition=8,error_code=0},{topic=demo,partition=41,error_code=0},{topic=demo,partition=12,error_code=0},{topic=demo,partition=45,error_code=0},{topic=demo,partition=16,error_code=0},{topic=demo,partition=49,error_code=0},{topic=demo,partition=20,error_code=0},{topic=demo,partition=23,error_code=0},{topic=demo,partition=27,error_code=0},{topic=demo,partition=31,error_code=0},{topic=demo,partition=2,error_code=0},{topic=demo,partition=35,error_code=0},{topic=demo,partition=7,error_code=0},{topic=demo,partition=40,error_code=0},{topic=demo,partition=11,error_code=0},{topic=demo,partition=44,error_code=0},{topic=demo,partition=15,error_code=0},{topic=demo,partition=48,error_code=0},{topic=demo,partition=19,error_code=0},{topic=demo,partition=22,error_code=0},{topic=demo,partition=26,error_code=0},{topic=demo,partition=30,error_code=0},{topic=demo,partition=1,error_code=0},{topic=demo,partition=34,error_code=0},{topic=demo,partition=6,error_code=0},{topic=demo,partition=39,error_code=0},{topic=demo,partition=10,error_code=0},{topic=demo,partition=43,error_code=0},{topic=demo,partition=14,error_code=0},{topic=demo,partition=47,error_code=0},{topic=demo,partition=18,error_code=0}]} for request STOP_REPLICA with correlation id 13 sent to broker vinicius:9091 (id: 1 rack: null) (state.change.logger)
