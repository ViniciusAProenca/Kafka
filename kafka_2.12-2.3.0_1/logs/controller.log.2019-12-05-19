[2019-12-05 19:14:34,605] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-12-05 19:14:34,664] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2019-12-05 19:14:34,664] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2019-12-05 19:14:34,670] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-12-05 19:14:34,677] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-12-05 19:14:34,681] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2019-12-05 19:14:34,699] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 443) (kafka.controller.KafkaController)
[2019-12-05 19:14:34,738] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2019-12-05 19:14:34,807] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-12-05 19:14:34,824] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-12-05 19:14:34,827] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-12-05 19:14:34,827] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2019-12-05 19:14:34,828] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-12-05 19:14:34,828] INFO [Controller id=1] Current list of topics in the cluster: Set(demo) (kafka.controller.KafkaController)
[2019-12-05 19:14:34,828] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-12-05 19:14:34,840] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-12-05 19:14:34,840] INFO [Controller id=1] List of topics ineligible for deletion: demo (kafka.controller.KafkaController)
[2019-12-05 19:14:34,840] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-12-05 19:14:34,841] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(demo) (kafka.controller.TopicDeletionManager)
[2019-12-05 19:14:34,841] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2019-12-05 19:14:34,853] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2019-12-05 19:14:34,875] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-12-05 19:14:34,932] INFO [RequestSendThread controllerId=1] Controller 1 connected to vinicius:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-12-05 19:14:35,107] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-12-05 19:14:35,591] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=demo,Partition=41,Replica=1] -> OnlineReplica, [Topic=demo,Partition=37,Replica=3] -> OfflineReplica, [Topic=demo,Partition=22,Replica=3] -> OfflineReplica, [Topic=demo,Partition=24,Replica=1] -> OnlineReplica, [Topic=demo,Partition=3,Replica=1] -> OnlineReplica, [Topic=demo,Partition=40,Replica=1] -> OnlineReplica, [Topic=demo,Partition=8,Replica=2] -> OfflineReplica, [Topic=demo,Partition=23,Replica=3] -> OfflineReplica, [Topic=demo,Partition=23,Replica=1] -> OnlineReplica, [Topic=demo,Partition=37,Replica=1] -> OnlineReplica, [Topic=demo,Partition=40,Replica=3] -> OfflineReplica, [Topic=demo,Partition=1,Replica=1] -> OnlineReplica, [Topic=demo,Partition=6,Replica=2] -> OfflineReplica, [Topic=demo,Partition=12,Replica=2] -> OfflineReplica, [Topic=demo,Partition=11,Replica=1] -> OnlineReplica, [Topic=demo,Partition=29,Replica=3] -> OfflineReplica, [Topic=demo,Partition=14,Replica=3] -> OfflineReplica, [Topic=demo,Partition=13,Replica=2] -> OfflineReplica, [Topic=demo,Partition=25,Replica=1] -> OnlineReplica, [Topic=demo,Partition=26,Replica=1] -> OnlineReplica, [Topic=demo,Partition=10,Replica=1] -> OnlineReplica, [Topic=demo,Partition=34,Replica=3] -> OfflineReplica, [Topic=demo,Partition=38,Replica=1] -> OnlineReplica, [Topic=demo,Partition=46,Replica=3] -> OfflineReplica, [Topic=demo,Partition=45,Replica=1] -> OnlineReplica, [Topic=demo,Partition=5,Replica=3] -> OfflineReplica, [Topic=demo,Partition=9,Replica=1] -> OnlineReplica, [Topic=demo,Partition=44,Replica=1] -> OnlineReplica, [Topic=demo,Partition=33,Replica=1] -> OnlineReplica, [Topic=demo,Partition=8,Replica=3] -> OfflineReplica, [Topic=demo,Partition=19,Replica=1] -> OnlineReplica, [Topic=demo,Partition=7,Replica=3] -> OfflineReplica, [Topic=demo,Partition=16,Replica=3] -> OfflineReplica, [Topic=demo,Partition=28,Replica=2] -> OfflineReplica, [Topic=demo,Partition=31,Replica=2] -> OfflineReplica, [Topic=demo,Partition=36,Replica=2] -> OfflineReplica, [Topic=demo,Partition=41,Replica=3] -> OfflineReplica, [Topic=demo,Partition=27,Replica=1] -> OnlineReplica, [Topic=demo,Partition=45,Replica=3] -> OfflineReplica, [Topic=demo,Partition=46,Replica=1] -> OnlineReplica, [Topic=demo,Partition=30,Replica=1] -> OnlineReplica, [Topic=demo,Partition=14,Replica=2] -> OfflineReplica, [Topic=demo,Partition=22,Replica=1] -> OnlineReplica, [Topic=demo,Partition=24,Replica=2] -> OfflineReplica, [Topic=demo,Partition=47,Replica=2] -> OfflineReplica, [Topic=demo,Partition=35,Replica=3] -> OfflineReplica, [Topic=demo,Partition=4,Replica=2] -> OfflineReplica, [Topic=demo,Partition=46,Replica=2] -> OfflineReplica, [Topic=demo,Partition=48,Replica=2] -> OfflineReplica, [Topic=demo,Partition=48,Replica=1] -> OnlineReplica, [Topic=demo,Partition=19,Replica=3] -> OfflineReplica, [Topic=demo,Partition=43,Replica=2] -> OfflineReplica, [Topic=demo,Partition=3,Replica=3] -> OfflineReplica, [Topic=demo,Partition=0,Replica=3] -> OfflineReplica, [Topic=demo,Partition=49,Replica=2] -> OfflineReplica, [Topic=demo,Partition=26,Replica=2] -> OfflineReplica, [Topic=demo,Partition=11,Replica=2] -> OfflineReplica, [Topic=demo,Partition=2,Replica=3] -> OfflineReplica, [Topic=demo,Partition=32,Replica=1] -> OnlineReplica, [Topic=demo,Partition=16,Replica=1] -> OnlineReplica, [Topic=demo,Partition=12,Replica=3] -> OfflineReplica, [Topic=demo,Partition=31,Replica=1] -> OnlineReplica, [Topic=demo,Partition=44,Replica=2] -> OfflineReplica, [Topic=demo,Partition=16,Replica=2] -> OfflineReplica, [Topic=demo,Partition=1,Replica=3] -> OfflineReplica, [Topic=demo,Partition=34,Replica=2] -> OfflineReplica, [Topic=demo,Partition=6,Replica=1] -> OnlineReplica, [Topic=demo,Partition=2,Replica=2] -> OfflineReplica, [Topic=demo,Partition=42,Replica=2] -> OfflineReplica, [Topic=demo,Partition=47,Replica=1] -> OnlineReplica, [Topic=demo,Partition=22,Replica=2] -> OfflineReplica, [Topic=demo,Partition=4,Replica=1] -> OnlineReplica, [Topic=demo,Partition=34,Replica=1] -> OnlineReplica, [Topic=demo,Partition=24,Replica=3] -> OfflineReplica, [Topic=demo,Partition=18,Replica=1] -> OnlineReplica, [Topic=demo,Partition=49,Replica=3] -> OfflineReplica, [Topic=demo,Partition=29,Replica=1] -> OnlineReplica, [Topic=demo,Partition=5,Replica=2] -> OfflineReplica, [Topic=demo,Partition=30,Replica=2] -> OfflineReplica, [Topic=demo,Partition=23,Replica=2] -> OfflineReplica, [Topic=demo,Partition=38,Replica=3] -> OfflineReplica, [Topic=demo,Partition=35,Replica=1] -> OnlineReplica, [Topic=demo,Partition=20,Replica=2] -> OfflineReplica, [Topic=demo,Partition=25,Replica=3] -> OfflineReplica, [Topic=demo,Partition=19,Replica=2] -> OfflineReplica, [Topic=demo,Partition=32,Replica=2] -> OfflineReplica, [Topic=demo,Partition=7,Replica=2] -> OfflineReplica, [Topic=demo,Partition=47,Replica=3] -> OfflineReplica, [Topic=demo,Partition=20,Replica=1] -> OnlineReplica, [Topic=demo,Partition=39,Replica=1] -> OnlineReplica, [Topic=demo,Partition=36,Replica=3] -> OfflineReplica, [Topic=demo,Partition=2,Replica=1] -> OnlineReplica, [Topic=demo,Partition=45,Replica=2] -> OfflineReplica, [Topic=demo,Partition=41,Replica=2] -> OfflineReplica, [Topic=demo,Partition=17,Replica=3] -> OfflineReplica, [Topic=demo,Partition=20,Replica=3] -> OfflineReplica, [Topic=demo,Partition=3,Replica=2] -> OfflineReplica, [Topic=demo,Partition=31,Replica=3] -> OfflineReplica, [Topic=demo,Partition=48,Replica=3] -> OfflineReplica, [Topic=demo,Partition=12,Replica=1] -> OnlineReplica, [Topic=demo,Partition=1,Replica=2] -> OfflineReplica, [Topic=demo,Partition=11,Replica=3] -> OfflineReplica, [Topic=demo,Partition=36,Replica=1] -> OnlineReplica, [Topic=demo,Partition=33,Replica=2] -> OfflineReplica, [Topic=demo,Partition=27,Replica=3] -> OfflineReplica, [Topic=demo,Partition=21,Replica=2] -> OfflineReplica, [Topic=demo,Partition=17,Replica=1] -> OnlineReplica, [Topic=demo,Partition=44,Replica=3] -> OfflineReplica, [Topic=demo,Partition=15,Replica=1] -> OnlineReplica, [Topic=demo,Partition=13,Replica=1] -> OnlineReplica, [Topic=demo,Partition=0,Replica=1] -> OnlineReplica, [Topic=demo,Partition=6,Replica=3] -> OfflineReplica, [Topic=demo,Partition=4,Replica=3] -> OfflineReplica, [Topic=demo,Partition=21,Replica=3] -> OfflineReplica, [Topic=demo,Partition=49,Replica=1] -> OnlineReplica, [Topic=demo,Partition=28,Replica=1] -> OnlineReplica, [Topic=demo,Partition=42,Replica=1] -> OnlineReplica, [Topic=demo,Partition=27,Replica=2] -> OfflineReplica, [Topic=demo,Partition=38,Replica=2] -> OfflineReplica, [Topic=demo,Partition=17,Replica=2] -> OfflineReplica, [Topic=demo,Partition=21,Replica=1] -> OnlineReplica, [Topic=demo,Partition=14,Replica=1] -> OnlineReplica, [Topic=demo,Partition=9,Replica=3] -> OfflineReplica, [Topic=demo,Partition=33,Replica=3] -> OfflineReplica, [Topic=demo,Partition=15,Replica=3] -> OfflineReplica, [Topic=demo,Partition=40,Replica=2] -> OfflineReplica, [Topic=demo,Partition=43,Replica=3] -> OfflineReplica, [Topic=demo,Partition=39,Replica=3] -> OfflineReplica, [Topic=demo,Partition=0,Replica=2] -> OfflineReplica, [Topic=demo,Partition=18,Replica=3] -> OfflineReplica, [Topic=demo,Partition=7,Replica=1] -> OnlineReplica, [Topic=demo,Partition=26,Replica=3] -> OfflineReplica, [Topic=demo,Partition=25,Replica=2] -> OfflineReplica, [Topic=demo,Partition=32,Replica=3] -> OfflineReplica, [Topic=demo,Partition=8,Replica=1] -> OnlineReplica, [Topic=demo,Partition=15,Replica=2] -> OfflineReplica, [Topic=demo,Partition=42,Replica=3] -> OfflineReplica, [Topic=demo,Partition=9,Replica=2] -> OfflineReplica, [Topic=demo,Partition=43,Replica=1] -> OnlineReplica, [Topic=demo,Partition=18,Replica=2] -> OfflineReplica, [Topic=demo,Partition=30,Replica=3] -> OfflineReplica, [Topic=demo,Partition=13,Replica=3] -> OfflineReplica, [Topic=demo,Partition=5,Replica=1] -> OnlineReplica, [Topic=demo,Partition=39,Replica=2] -> OfflineReplica, [Topic=demo,Partition=37,Replica=2] -> OfflineReplica, [Topic=demo,Partition=10,Replica=3] -> OfflineReplica, [Topic=demo,Partition=28,Replica=3] -> OfflineReplica, [Topic=demo,Partition=35,Replica=2] -> OfflineReplica, [Topic=demo,Partition=10,Replica=2] -> OfflineReplica, [Topic=demo,Partition=29,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2019-12-05 19:14:35,592] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2019-12-05 19:14:35,599] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2019-12-05 19:14:35,796] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(demo-34 -> OfflinePartition, demo-45 -> OfflinePartition, demo-15 -> OfflinePartition, demo-4 -> OfflinePartition, demo-26 -> OfflinePartition, demo-37 -> OfflinePartition, demo-31 -> OfflinePartition, demo-20 -> OfflinePartition, demo-42 -> OfflinePartition, demo-23 -> OfflinePartition, demo-12 -> OfflinePartition, demo-1 -> OfflinePartition, demo-6 -> OfflinePartition, demo-28 -> OfflinePartition, demo-39 -> OfflinePartition, demo-17 -> OfflinePartition, demo-9 -> OfflinePartition, demo-3 -> OfflinePartition, demo-14 -> OfflinePartition, demo-25 -> OfflinePartition, demo-47 -> OfflinePartition, demo-36 -> OfflinePartition, demo-41 -> OfflinePartition, demo-22 -> OfflinePartition, demo-33 -> OfflinePartition, demo-11 -> OfflinePartition, demo-0 -> OfflinePartition, demo-44 -> OfflinePartition, demo-49 -> OfflinePartition, demo-38 -> OfflinePartition, demo-27 -> OfflinePartition, demo-8 -> OfflinePartition, demo-19 -> OfflinePartition, demo-30 -> OfflinePartition, demo-46 -> OfflinePartition, demo-35 -> OfflinePartition, demo-13 -> OfflinePartition, demo-24 -> OfflinePartition, demo-16 -> OfflinePartition, demo-5 -> OfflinePartition, demo-21 -> OfflinePartition, demo-43 -> OfflinePartition, demo-10 -> OfflinePartition, demo-32 -> OfflinePartition, demo-2 -> OfflinePartition, demo-48 -> OfflinePartition, demo-29 -> OfflinePartition, demo-40 -> OfflinePartition, demo-7 -> OfflinePartition, demo-18 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2019-12-05 19:14:35,797] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2019-12-05 19:14:35,800] INFO [Controller id=1] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-12-05 19:14:35,800] INFO [Controller id=1] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-12-05 19:14:35,806] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-12-05 19:14:35,807] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-12-05 19:14:35,807] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-12-05 19:14:35,808] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-12-05 19:14:35,809] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:14:35,849] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-12-05 19:14:40,852] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:14:40,853] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:14:40,868] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:14:40,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:14:40,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,873] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:14:40,873] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:14:40,873] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,873] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,886] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,887] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,888] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,889] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:14:40,889] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,890] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:14:40,891] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:14:40,891] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:19:40,891] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:19:40,891] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:19:40,893] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:19:40,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:19:40,893] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,894] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:19:40,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:19:40,894] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,894] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,905] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,906] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,907] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,908] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,908] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,908] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,908] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,908] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:19:40,909] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:19:40,909] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:24:40,909] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:24:40,910] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:24:40,912] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,913] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,929] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:24:40,930] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:29:40,931] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:29:40,931] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:29:40,933] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:29:40,934] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:29:40,934] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,934] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:29:40,934] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:29:40,934] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,935] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,945] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,945] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,946] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,947] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:29:40,947] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:29:40,947] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:34:40,947] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:34:40,947] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,949] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,966] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,966] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,967] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:34:40,968] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:39:40,968] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:39:40,969] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:39:40,970] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,971] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,986] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,986] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,987] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,988] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,989] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:39:40,989] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:39:40,989] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:44:40,989] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:44:40,989] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:44:40,990] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:44:40,990] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:44:40,990] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:44:40,990] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:44:40,991] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:44:40,991] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:44:40,991] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,001] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,002] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,002] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,002] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,002] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,002] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,023] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,023] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:44:41,024] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:49:41,025] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:49:41,025] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:49:41,030] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:49:41,030] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:49:41,031] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,031] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:49:41,031] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:49:41,031] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,031] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,042] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,042] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,043] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,044] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:49:41,045] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:54:41,045] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:54:41,046] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:54:41,047] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:54:41,047] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:54:41,047] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,047] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:54:41,047] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:54:41,048] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,049] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,063] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,064] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,071] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,071] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,071] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,071] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,072] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,073] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,073] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,075] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:54:41,076] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:54:41,076] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:59:41,076] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-05 19:59:41,076] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)), 1 -> Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)), 3 -> Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1))) (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(demo-23 -> Vector(2, 1, 3), demo-5 -> Vector(2, 1, 3), demo-44 -> Vector(2, 3, 1), demo-14 -> Vector(2, 3, 1), demo-26 -> Vector(2, 3, 1), demo-8 -> Vector(2, 3, 1), demo-47 -> Vector(2, 1, 3), demo-38 -> Vector(2, 3, 1), demo-17 -> Vector(2, 1, 3), demo-20 -> Vector(2, 3, 1), demo-29 -> Vector(2, 1, 3), demo-11 -> Vector(2, 1, 3), demo-41 -> Vector(2, 1, 3), demo-35 -> Vector(2, 1, 3), demo-32 -> Vector(2, 3, 1), demo-2 -> Vector(2, 3, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(demo-28 -> Vector(1, 3, 2), demo-43 -> Vector(1, 2, 3), demo-31 -> Vector(1, 2, 3), demo-13 -> Vector(1, 2, 3), demo-4 -> Vector(1, 3, 2), demo-16 -> Vector(1, 3, 2), demo-22 -> Vector(1, 3, 2), demo-46 -> Vector(1, 3, 2), demo-1 -> Vector(1, 2, 3), demo-10 -> Vector(1, 3, 2), demo-37 -> Vector(1, 2, 3), demo-7 -> Vector(1, 2, 3), demo-34 -> Vector(1, 3, 2), demo-19 -> Vector(1, 2, 3), demo-40 -> Vector(1, 3, 2), demo-25 -> Vector(1, 2, 3), demo-49 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2019-12-05 19:59:41,078] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,079] INFO [Controller id=1] Starting preferred replica leader election for partitions demo-28,demo-43,demo-31,demo-13,demo-4,demo-16,demo-22,demo-46,demo-1,demo-10,demo-37,demo-7,demo-34,demo-19,demo-40,demo-25,demo-49 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,115] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-28 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-28 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,115] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-43 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-43 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,115] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-31 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-31 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,115] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-13 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-13 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,115] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-4 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-4 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-16 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-16 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-22 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-22 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-46 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-46 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-10 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-10 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-37 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-37 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-7 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-7 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-34 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-34 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-19 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-19 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-40 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-40 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-25 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-25 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] ERROR [Controller id=1] Error completing preferred replica leader election for partition demo-49 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition demo-49 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:647)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:995)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:976)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1004)
	at kafka.controller.KafkaController.process(KafkaController.scala:1564)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-28 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-43 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-31 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-13 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-4 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-16 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-22 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-46 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-1 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-10 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-37 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-7 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-34 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-19 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-40 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-25 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,116] WARN [Controller id=1] Partition demo-49 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,117] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(demo-42 -> Vector(3, 1, 2), demo-39 -> Vector(3, 2, 1), demo-27 -> Vector(3, 2, 1), demo-48 -> Vector(3, 1, 2), demo-33 -> Vector(3, 2, 1), demo-3 -> Vector(3, 2, 1), demo-0 -> Vector(3, 1, 2), demo-9 -> Vector(3, 2, 1), demo-12 -> Vector(3, 1, 2), demo-21 -> Vector(3, 2, 1), demo-24 -> Vector(3, 1, 2), demo-30 -> Vector(3, 1, 2), demo-36 -> Vector(3, 1, 2), demo-6 -> Vector(3, 1, 2), demo-18 -> Vector(3, 1, 2), demo-45 -> Vector(3, 2, 1), demo-15 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2019-12-05 19:59:41,117] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2019-12-05 19:59:41,117] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
